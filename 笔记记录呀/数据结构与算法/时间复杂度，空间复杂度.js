/*
    递归度时间复杂度：
    一般有三种：
    （1）二分查找类型，有序每次折半查找 时间复杂度O(logn)
     (2) 二叉树遍历类型 时间复杂度为O(n) 为O(n) 可以理解为 排好序的二叉树每个节点都做一次访问且仅访问一次所以为O（n） 就像前中后序进行的一个判断就是O(n)
     注意爬楼梯问题：如果所有只计算一次的话，那时间复杂度就是O(n), 但是爬楼梯问题有很多重复计算的问题 导致其时间复杂度变成了 2的n次方
     （3）有序的二维矩(可以理解为二维数组)阵中做二分查找 是O(n)
     （4） 归并排序O(nlogn)
*/
/*
    空间复杂度：
    （1）数组的长度（长度基本就是空间复杂度）
    （2）递归的深度（递归的深度即是你的空间复杂度）
*/